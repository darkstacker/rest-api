name: tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  functional:
    name: Functional Tests ${{matrix.php}}, ${{ matrix.os }}, ${{ matrix.stability }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    env:
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_DATABASE: database
    services:
      postgresql:
        image: postgres:16.3
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd=pg_isready
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.4' ]
        os: [ ubuntu-latest ]
        stability: [ prefer-lowest, prefer-stable ]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: mbstring, pdo, pdo_pgsql
          ini-values: "memory_limit=-1"
      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose
          sudo systemctl start docker
          sudo systemctl enable docker
      - name: Copy .env.example to .env
        run: cp .env.example .env
      - name: Start Docker Compose
        run: |
          docker-compose up -d
      - name: Install Dependencies
        run: docker-compose exec app composer install
      - name: Generate Application Key
        run: docker-compose exec app php artisan key:generate
      - name: Generate JWT Secret Key
        run: docker-compose exec app php artisan jwt:secret
      - name: Refresh and Seed the Database
        run: docker-compose exec app php artisan migrate:fresh --seed
      - name: Execute Functional Tests
        run: docker-compose exec app composer test:functional

  unit:
    name: Unit Tests ${{matrix.php}}, ${{ matrix.os }}, ${{ matrix.stability }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.4' ]
        os: [ ubuntu-latest ]
        stability: [ prefer-lowest, prefer-stable ]
    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: mbstring, pdo, pdo_pgsql
          ini-values: "memory_limit=-1"
      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose
          sudo systemctl start docker
          sudo systemctl enable docker
      - name: Copy .env.example to .env
        run: cp .env.example .env
      - name: Start Docker Compose
        run: |
          docker-compose up -d
      - name: Install Dependencies
        run: docker-compose exec app composer install
      - name: Generate Application Key
        run: docker-compose exec app php artisan key:generate
      - name: Generate JWT Secret Key
        run: docker-compose exec app php artisan jwt:secret
      - name: Refresh and Seed the Database
        run: docker-compose exec app php artisan migrate:fresh --seed
      - name: Execute Unit Tests
        run: docker-compose exec app composer test:unit